import '../question_bank_screen/widgets/expandablelistinputplaceholdermediumon_item_widget.dart';import 'bloc/question_bank_bloc.dart';import 'models/expandablelistinputplaceholdermediumon_item_model.dart';import 'models/question_bank_model.dart';import 'package:flutter/material.dart';import 'package:shubham_s_application2/core/app_export.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_image.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:shubham_s_application2/widgets/app_bar/custom_app_bar.dart';class QuestionBankScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<QuestionBankBloc>(create: (context) => QuestionBankBloc(QuestionBankState(questionBankModelObj: QuestionBankModel()))..add(QuestionBankInitialEvent()), child: QuestionBankScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(49), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 13, bottom: 12), onTap: () {onTapArrowleft30(context);}), centerTitle: true, title: AppbarSubtitle(text: "lbl_question_bank".tr)), body: Padding(padding: getPadding(top: 24, bottom: 9), child: BlocSelector<QuestionBankBloc, QuestionBankState, QuestionBankModel?>(selector: (state) => state.questionBankModelObj, builder: (context, questionBankModelObj) {return ListView.builder(shrinkWrap: true, itemCount: questionBankModelObj?.expandablelistinputplaceholdermediumonItemList.length ?? 0, itemBuilder: (context, index) {ExpandablelistinputplaceholdermediumonItemModel model = questionBankModelObj?.expandablelistinputplaceholdermediumonItemList[index] ?? ExpandablelistinputplaceholdermediumonItemModel(); return ExpandablelistinputplaceholdermediumonItemWidget(model, onSelectedExpandableList: (value) {context.read<QuestionBankBloc>().add(UpdateExpandableListEvent(index: index, isSelected: value));});});})))); } 
onTapArrowleft30(BuildContext context) { NavigatorService.goBack(); } 
 }
