import '../video_trimming_screen/widgets/videotrimming_item_widget.dart';import 'bloc/video_trimming_bloc.dart';import 'models/video_trimming_model.dart';import 'models/videotrimming_item_model.dart';import 'package:flutter/material.dart';import 'package:shubham_s_application2/core/app_export.dart';import 'package:shubham_s_application2/widgets/custom_checkbox.dart';class VideoTrimmingScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<VideoTrimmingBloc>(create: (context) => VideoTrimmingBloc(VideoTrimmingState(videoTrimmingModelObj: VideoTrimmingModel()))..add(VideoTrimmingInitialEvent()), child: VideoTrimmingScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, body: Container(width: double.maxFinite, padding: getPadding(top: 10, bottom: 10), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 16, right: 16), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(svgPath: ImageConstant.imgArrowleft, height: getSize(24), width: getSize(24), margin: getMargin(top: 1, bottom: 3), onTap: () {onTapImgArrowleft(context);}), BlocSelector<VideoTrimmingBloc, VideoTrimmingState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckbox(width: getHorizontalSize(265), text: "lbl_video_editor".tr, value: isCheckbox, fontStyle: CheckboxFontStyle.GilroySemiBold24, isRightCheck: true, onChange: (value) {context.read<VideoTrimmingBloc>().add(ChangeCheckBoxEvent(value: value));});})])), CustomImageView(imagePath: ImageConstant.imgRectangle1333, height: getVerticalSize(504), width: getHorizontalSize(396), margin: getMargin(top: 34)), Padding(padding: getPadding(left: 16, top: 24, right: 16), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(svgPath: ImageConstant.imgBackwardoutlineBlueGray400, height: getSize(24), width: getSize(24)), CustomImageView(svgPath: ImageConstant.imgPlaysolidBlueGray400, height: getSize(24), width: getSize(24)), CustomImageView(svgPath: ImageConstant.imgBackwardoutlineBlueGray40024x24, height: getSize(24), width: getSize(24))])), Padding(padding: getPadding(left: 16, top: 16, right: 18), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Container(width: getHorizontalSize(33), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_0_1s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(35), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_0_5s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(33), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_1_0s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(33), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_1_5s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(35), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_2_0s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(34), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_2_5s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700)), Container(width: getHorizontalSize(35), padding: getPadding(left: 8, top: 1, right: 8, bottom: 1), decoration: AppDecoration.txtFillBluegray400.copyWith(borderRadius: BorderRadiusStyle.txtRoundedBorder2), child: Text("lbl_3_0s".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium10WhiteA700))])), SingleChildScrollView(scrollDirection: Axis.horizontal, padding: getPadding(left: 16, top: 8), child: IntrinsicWidth(child: Container(height: getVerticalSize(80), width: getHorizontalSize(480), child: Stack(alignment: Alignment.centerLeft, children: [CustomImageView(imagePath: ImageConstant.imgRectangle133380x120, height: getVerticalSize(80), width: getHorizontalSize(120), radius: BorderRadius.only(topLeft: Radius.circular(getHorizontalSize(3)), bottomLeft: Radius.circular(getHorizontalSize(3))), alignment: Alignment.centerLeft), CustomImageView(imagePath: ImageConstant.imgRectangle1333, height: getVerticalSize(80), width: getHorizontalSize(120), alignment: Alignment.centerLeft, margin: getMargin(left: 120)), CustomImageView(imagePath: ImageConstant.imgRectangle1333, height: getVerticalSize(80), width: getHorizontalSize(120), alignment: Alignment.centerRight, margin: getMargin(right: 120)), CustomImageView(svgPath: ImageConstant.imgGroup9831, height: getVerticalSize(80), width: getHorizontalSize(266), alignment: Alignment.center), CustomImageView(imagePath: ImageConstant.imgRectangle1333, height: getVerticalSize(80), width: getHorizontalSize(120), alignment: Alignment.centerRight)])))), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(74), child: BlocSelector<VideoTrimmingBloc, VideoTrimmingState, VideoTrimmingModel?>(selector: (state) => state.videoTrimmingModelObj, builder: (context, videoTrimmingModelObj) {return ListView.separated(padding: getPadding(left: 16, top: 24), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(48));}, itemCount: videoTrimmingModelObj?.videotrimmingItemList.length ?? 0, itemBuilder: (context, index) {VideotrimmingItemModel model = videoTrimmingModelObj?.videotrimmingItemList[index] ?? VideotrimmingItemModel(); return VideotrimmingItemWidget(model);});})))])))); } 
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
