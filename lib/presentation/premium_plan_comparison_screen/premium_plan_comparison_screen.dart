import 'bloc/premium_plan_comparison_bloc.dart';import 'models/premium_plan_comparison_model.dart';import 'package:flutter/material.dart';import 'package:shubham_s_application2/core/app_export.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_image.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:shubham_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:shubham_s_application2/widgets/custom_button.dart';import 'package:shubham_s_application2/widgets/custom_checkbox.dart';import 'package:shubham_s_application2/widgets/custom_icon_button.dart';class PremiumPlanComparisonScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<PremiumPlanComparisonBloc>(create: (context) => PremiumPlanComparisonBloc(PremiumPlanComparisonState(premiumPlanComparisonModelObj: PremiumPlanComparisonModel()))..add(PremiumPlanComparisonInitialEvent()), child: PremiumPlanComparisonScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft45(context);}), centerTitle: true, title: AppbarSubtitle(text: "msg_premium_plan_comparison".tr)), body: Container(width: double.maxFinite, padding: getPadding(top: 20, bottom: 20), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 24, right: 24), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(width: getHorizontalSize(178), padding: getPadding(all: 16), decoration: AppDecoration.outlineBlueA7003.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Row(children: [CustomIconButton(height: 32, width: 32, variant: IconButtonVariant.FillGray300, padding: IconButtonPadding.PaddingAll4, child: CustomImageView(svgPath: ImageConstant.imgLocation)), Padding(padding: getPadding(left: 8, top: 4, bottom: 4), child: Text("lbl_basic".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold20Green600))]), Container(width: getHorizontalSize(90), margin: getMargin(top: 14), child: RichText(text: TextSpan(children: [TextSpan(text: "".tr, style: TextStyle(color: ColorConstant.fromHex("#ff74839d"), fontSize: getFontSize(12), fontFamily: 'Gilroy', fontWeight: FontWeight.w600)), TextSpan(text: "159".tr, style: TextStyle(color: ColorConstant.fromHex("#ff262b35"), fontSize: getFontSize(36), fontFamily: 'Gilroy', fontWeight: FontWeight.w600)), TextSpan(text: "/year".tr, style: TextStyle(color: ColorConstant.fromHex("#ff74839d"), fontSize: getFontSize(12), fontFamily: 'Gilroy', fontWeight: FontWeight.w600))]), textAlign: TextAlign.left)), Padding(padding: getPadding(top: 15, bottom: 2), child: Text("lbl_13_25_month".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12))])), Container(width: getHorizontalSize(178), margin: getMargin(left: 24), padding: getPadding(all: 16), decoration: AppDecoration.outlineGray60019.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Row(children: [CustomIconButton(height: 32, width: 32, variant: IconButtonVariant.FillBlue50, padding: IconButtonPadding.PaddingAll4, child: CustomImageView(svgPath: ImageConstant.imgTicket)), Padding(padding: getPadding(left: 8, top: 4, bottom: 4), child: Text("lbl_premium".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold20BlueA700))]), Container(width: getHorizontalSize(95), margin: getMargin(top: 14), child: RichText(text: TextSpan(children: [TextSpan(text: "".tr, style: TextStyle(color: ColorConstant.fromHex("#ff74839d"), fontSize: getFontSize(12), fontFamily: 'Gilroy', fontWeight: FontWeight.w600)), TextSpan(text: "259".tr, style: TextStyle(color: ColorConstant.fromHex("#ff262b35"), fontSize: getFontSize(36), fontFamily: 'Gilroy', fontWeight: FontWeight.w600)), TextSpan(text: "/year".tr, style: TextStyle(color: ColorConstant.fromHex("#ff74839d"), fontSize: getFontSize(12), fontFamily: 'Gilroy', fontWeight: FontWeight.w600))]), textAlign: TextAlign.left)), Padding(padding: getPadding(top: 15, bottom: 2), child: Text("lbl_21_59_month".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12))]))])), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 16, top: 55), child: Text("msg_choose_your_plan".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium18Bluegray400))), Container(width: double.maxFinite, child: Container(margin: getMargin(top: 17), padding: getPadding(left: 16, top: 17, right: 16, bottom: 17), decoration: AppDecoration.outlineBluegray1002, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(top: 1), child: Row(children: [Text("lbl_features".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold16Bluegray900), Spacer(), Text("lbl_basic".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold16Bluegray900), Padding(padding: getPadding(left: 24), child: Text("lbl_premium".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold16Bluegray900))])), Container(height: getVerticalSize(20), width: getHorizontalSize(374), margin: getMargin(top: 26), child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.centerLeft, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckbox(alignment: Alignment.centerLeft, text: "msg_lorem_ipsum_dolor9".tr, value: isCheckbox, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBoxEvent(value: value));});})), Align(alignment: Alignment.center, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox1, builder: (context, isCheckbox1) {return CustomCheckbox(alignment: Alignment.center, text: "msg_lorem_ipsum_dolor9".tr, value: isCheckbox1, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBox1Event(value: value));});}))])), Container(height: getVerticalSize(39), width: getHorizontalSize(374), margin: getMargin(top: 19), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox2, builder: (context, isCheckbox2) {return CustomCheckbox(alignment: Alignment.center, text: "msg_lorem_ipsum_dolor10".tr, value: isCheckbox2, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBox2Event(value: value));});})), CustomImageView(svgPath: ImageConstant.imgMenu, height: getSize(20), width: getSize(20), alignment: Alignment.centerRight, margin: getMargin(right: 82))])), Container(height: getVerticalSize(20), width: getHorizontalSize(374), margin: getMargin(top: 19), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox3, builder: (context, isCheckbox3) {return CustomCheckbox(alignment: Alignment.center, text: "msg_lorem_ipsum_dolor9".tr, value: isCheckbox3, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBox3Event(value: value));});})), CustomImageView(svgPath: ImageConstant.imgMenu, height: getSize(20), width: getSize(20), alignment: Alignment.centerRight, margin: getMargin(right: 82))])), Container(height: getVerticalSize(20), width: getHorizontalSize(374), margin: getMargin(top: 18), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox4, builder: (context, isCheckbox4) {return CustomCheckbox(alignment: Alignment.center, text: "msg_lorem_ipsum_dolor9".tr, value: isCheckbox4, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBox4Event(value: value));});})), CustomImageView(svgPath: ImageConstant.imgMenu, height: getSize(20), width: getSize(20), alignment: Alignment.centerRight, margin: getMargin(right: 82))])), Container(height: getVerticalSize(20), width: getHorizontalSize(374), margin: getMargin(top: 18), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.center, child: BlocSelector<PremiumPlanComparisonBloc, PremiumPlanComparisonState, bool?>(selector: (state) => state.isCheckbox5, builder: (context, isCheckbox5) {return CustomCheckbox(alignment: Alignment.center, text: "msg_lorem_ipsum_dolor9".tr, value: isCheckbox5, fontStyle: CheckboxFontStyle.GilroyRegular14, onChange: (value) {context.read<PremiumPlanComparisonBloc>().add(ChangeCheckBox5Event(value: value));});})), CustomImageView(svgPath: ImageConstant.imgMenu, height: getSize(20), width: getSize(20), alignment: Alignment.centerRight, margin: getMargin(right: 82))]))]))), Spacer(), CustomButton(height: getVerticalSize(50), text: "msg_choose_your_plan".tr, margin: getMargin(left: 16, right: 16, bottom: 76))])))); } 
onTapArrowleft45(BuildContext context) { NavigatorService.goBack(); } 
 }
