import '../watermark_screen/widgets/watermark_item_widget.dart';import 'bloc/watermark_bloc.dart';import 'models/watermark_item_model.dart';import 'models/watermark_model.dart';import 'package:dotted_border/dotted_border.dart';import 'package:flutter/material.dart';import 'package:shubham_s_application2/core/app_export.dart';import 'package:shubham_s_application2/widgets/custom_checkbox.dart';class WatermarkScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<WatermarkBloc>(create: (context) => WatermarkBloc(WatermarkState(watermarkModelObj: WatermarkModel()))..add(WatermarkInitialEvent()), child: WatermarkScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, body: Container(width: double.maxFinite, padding: getPadding(top: 11, bottom: 11), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 16, right: 16), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [CustomImageView(svgPath: ImageConstant.imgArrowleftBlueGray900, height: getSize(24), width: getSize(24), margin: getMargin(top: 1, bottom: 3), onTap: () {onTapImgArrowleft(context);}), BlocSelector<WatermarkBloc, WatermarkState, bool?>(selector: (state) => state.isCheckbox, builder: (context, isCheckbox) {return CustomCheckbox(width: getHorizontalSize(297), text: "lbl_add_a_watermark".tr, value: isCheckbox, margin: getMargin(left: 75), fontStyle: CheckboxFontStyle.GilroySemiBold24, isRightCheck: true, onChange: (value) {context.read<WatermarkBloc>().add(ChangeCheckBoxEvent(value: value));});})])), Container(height: getVerticalSize(556), width: getHorizontalSize(396), margin: getMargin(top: 33), child: Stack(alignment: Alignment.bottomRight, children: [CustomImageView(imagePath: ImageConstant.imgRectangle20556x3961, height: getVerticalSize(556), width: getHorizontalSize(396), alignment: Alignment.center), Align(alignment: Alignment.bottomRight, child: Container(height: getVerticalSize(81), width: getHorizontalSize(176), margin: getMargin(right: 18, bottom: 133), child: Stack(alignment: Alignment.bottomRight, children: [Align(alignment: Alignment.topLeft, child: DottedBorder(color: ColorConstant.whiteA700, padding: EdgeInsets.only(left: getHorizontalSize(1), top: getVerticalSize(1), right: getHorizontalSize(1), bottom: getVerticalSize(1)), strokeWidth: getHorizontalSize(1), radius: Radius.circular(6), borderType: BorderType.RRect, dashPattern: [2, 2], child: Container(padding: getPadding(left: 27, top: 20, right: 27, bottom: 20), decoration: AppDecoration.outlineWhiteA700.copyWith(borderRadius: BorderRadiusStyle.roundedBorder6), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(bottom: 3), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanSemiBold2571))])))), CustomImageView(svgPath: ImageConstant.imgMinimizeGray5001, height: getSize(16), width: getSize(16), alignment: Alignment.bottomRight)])))])), SingleChildScrollView(scrollDirection: Axis.horizontal, padding: getPadding(left: 16, top: 16), child: IntrinsicWidth(child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(width: getHorizontalSize(80), padding: getPadding(left: 4, top: 6, right: 4, bottom: 6), decoration: AppDecoration.outlineBlueA7007, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: getPadding(left: 13, top: 33), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanSemiBold10)), Padding(padding: getPadding(top: 29), child: Text("lbl_roboto".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold10Bluegray400))])), Container(width: getHorizontalSize(80), margin: getMargin(left: 8), padding: getPadding(left: 4, top: 6, right: 4, bottom: 6), decoration: AppDecoration.fillBluegray100, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 31), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtSaralaBold10))), Padding(padding: getPadding(top: 26), child: Text("lbl_sarala".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold10Bluegray400))])), Container(width: getHorizontalSize(80), margin: getMargin(left: 8), padding: getPadding(left: 4, top: 6, right: 4, bottom: 6), decoration: AppDecoration.fillBluegray100, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 33), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtHelveticaNeue10))), Padding(padding: getPadding(top: 29), child: Text("lbl_helvetica".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold10Bluegray400))])), Container(width: getHorizontalSize(168), margin: getMargin(left: 8), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: getVerticalSize(100), width: getHorizontalSize(80), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgRectangle20556x3961, height: getVerticalSize(100), width: getHorizontalSize(80), alignment: Alignment.center), Align(alignment: Alignment.center, child: Container(padding: getPadding(left: 4, top: 6, right: 4, bottom: 6), decoration: AppDecoration.fillBluegray100, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 33), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtInterRegular10))), Padding(padding: getPadding(top: 28), child: Text("lbl_inter".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold10Bluegray400))])))])), Container(height: getVerticalSize(100), width: getHorizontalSize(80), margin: getMargin(left: 8), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgRectangle20556x3961, height: getVerticalSize(100), width: getHorizontalSize(80), alignment: Alignment.center), Align(alignment: Alignment.center, child: Container(padding: getPadding(left: 4, top: 5, right: 4, bottom: 5), decoration: AppDecoration.fillBluegray100, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.end, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(top: 33), child: Text("lbl_sunshine".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtOpenSansRomanRegular10))), Padding(padding: getPadding(top: 29), child: Text("lbl_open_sans".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold10Bluegray400))])))]))]))]))), Align(alignment: Alignment.centerRight, child: Container(height: getVerticalSize(74), child: BlocSelector<WatermarkBloc, WatermarkState, WatermarkModel?>(selector: (state) => state.watermarkModelObj, builder: (context, watermarkModelObj) {return ListView.separated(padding: getPadding(left: 16, top: 24), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(48));}, itemCount: watermarkModelObj?.watermarkItemList.length ?? 0, itemBuilder: (context, index) {WatermarkItemModel model = watermarkModelObj?.watermarkItemList[index] ?? WatermarkItemModel(); return WatermarkItemWidget(model);});})))])))); } 
onTapImgArrowleft(BuildContext context) { NavigatorService.goBack(); } 
 }
