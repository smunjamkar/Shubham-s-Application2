import '../leave_tracker_screen/widgets/leavetracker_item_widget.dart';import 'bloc/leave_tracker_bloc.dart';import 'models/leave_tracker_model.dart';import 'models/leavetracker_item_model.dart';import 'package:flutter/material.dart';import 'package:shubham_s_application2/core/app_export.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_image.dart';import 'package:shubham_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:shubham_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:shubham_s_application2/widgets/custom_search_view.dart';class LeaveTrackerScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<LeaveTrackerBloc>(create: (context) => LeaveTrackerBloc(LeaveTrackerState(leaveTrackerModelObj: LeaveTrackerModel()))..add(LeaveTrackerInitialEvent()), child: LeaveTrackerScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(49), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 13), onTap: () {onTapArrowleft35(context);}), centerTitle: true, title: AppbarSubtitle(text: "lbl_leave_tracker".tr), actions: [AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgOverflowmenu1, margin: getMargin(left: 16, top: 12, right: 16, bottom: 13))]), body: Container(width: double.maxFinite, padding: getPadding(left: 13, top: 24, right: 13, bottom: 24), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<LeaveTrackerBloc, LeaveTrackerState, TextEditingController?>(selector: (state) => state.inputFieldController, builder: (context, inputFieldController) {return CustomSearchView(focusNode: FocusNode(), controller: inputFieldController, hintText: "msg_search_organisation".tr, margin: getMargin(left: 3, right: 3), prefix: Container(margin: getMargin(left: 12, top: 12, right: 8, bottom: 12), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)), suffix: Container(margin: getMargin(left: 30, top: 12, right: 12, bottom: 12), child: CustomImageView(svgPath: ImageConstant.imgMicrophone)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)));}), Container(height: getVerticalSize(52), width: getHorizontalSize(396), margin: getMargin(top: 24), child: Stack(alignment: Alignment.bottomLeft, children: [Align(alignment: Alignment.topCenter, child: Container(margin: getMargin(bottom: 2), padding: getPadding(left: 25, top: 14, right: 25, bottom: 14), decoration: AppDecoration.outlineBluegray1001, child: Row(mainAxisAlignment: MainAxisAlignment.end, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_sick_leaves".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray400)), Padding(padding: getPadding(left: 58, bottom: 1), child: Text("lbl_casual_leaves".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray400))]))), Align(alignment: Alignment.bottomLeft, child: Padding(padding: getPadding(left: 18), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16BlueA700), Padding(padding: getPadding(top: 18), child: SizedBox(width: getHorizontalSize(38), child: Divider(height: getVerticalSize(2), thickness: getVerticalSize(2), color: ColorConstant.blueA700)))])))])), Padding(padding: getPadding(left: 3, top: 23), child: BlocSelector<LeaveTrackerBloc, LeaveTrackerState, LeaveTrackerModel?>(selector: (state) => state.leaveTrackerModelObj, builder: (context, leaveTrackerModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(18));}, itemCount: leaveTrackerModelObj?.leavetrackerItemList.length ?? 0, itemBuilder: (context, index) {LeavetrackerItemModel model = leaveTrackerModelObj?.leavetrackerItemList[index] ?? LeavetrackerItemModel(); return LeavetrackerItemWidget(model);});}))])))); } 
onTapArrowleft35(BuildContext context) { NavigatorService.goBack(); } 
 }
